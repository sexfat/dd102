@import 'common/var';
@import 'common/base';
@import 'common/reset';
@import 'mixins/mixin';
@import 'modules/header';
@import 'modules/footer';
@import 'modules/content';

//套件

// @import './plugin/....';

// node_modules/bootstrap-sass/assets/stylesheets/bootstrap

// @import 'node_modules/bootstrap-sass/assets/stylesheets/bootstrap' ;
// @import  'node_modules/owl.carousel/src/scss/owl.carousel';

@include bodysetting(17px);




.wrapper {
    @include rect(box_01, 200px, #f20);
}


.wapper {
    @include marignauto(60px, #f20);
}

.green {
    color: green
}

.blue {
    color: blue
}

@mixin blue() {
    color: blue
}

.box-blue {
    width: 100px;
    @extend .blue;
    // @extend .green;
    // @include blue();
}

$num01: 20px;
$num02 :2px;

.box {
    width: $num01 + $num02;
    height: 210 - 1px;
    margin: 1 * 20em;
    font-size: (10 / 12) + px
}


@include grid(12);




// @include margin-dir(top, 300);
// @include margin-dir(left, 300);


@mixin width ($width) {

    .box {
        @if $width>=10px {
            width: 10px
        }

        @else {
            width: 20px
        }
    }
}

@include width(9px);



@mixin borderR ($num: 5px, $borderRadius : true) {
    @if $borderRadius {
        .borderRadius {
            border-radius: $num;
        }
    }

    @else {
        .borderRadius {
            border-radius: 0px;
        }
    }
}

@include borderR(0px, false);




@mixin themes($theme) {
    @if $theme==yellow {
        body {
            background-color: yellow;
            @content;
        }
    }

    @else if $theme==blue {
        body {
            background-color: blue;
            @content;
        }
    }

    @else {
        body {
            background-color: #fff;
            @content;
        }
    }
}


@include themes(yellow) {
    font-size: 12px;
    color: yellow;

    .box {
        background-color: rgb(255, 230, 5);
    }
}


@include themes(blue) {
    font-size: 14px;
    color: blue;

    .box {
        background-color: rgb(4, 0, 253);
    }
}


//rwd

@include respond(desktop) {
    @include bodysetting(14px);

}


@include respond(medium) {
    @include bodysetting(12px);
}


@include respond(small) {
    @include bodysetting(16px);
}


$list : a01 a02 a03 a04 a05 btn;


@each $img in $list {
    .img_#{$img} {
        background: url('./img/#{$img}.jpg');
    }
}

$breakpoint: (small: 480px,
    medium: 720px,
    desktop : 988px,
    large: 1366px);

$fonts : (h1 : 38px,
    h2 : 34px,
    h3 : 27px,
    h4 : 26px,
    h5 : 20px,
    h6 : 16px);

.h1 {
    font-size: map-get($fonts, h3)
}

@each $title,
$num in $fonts {
    #{$title} {
        font-size: $num
    }
}

;








$breaks: (small: 767px,
    medium: 768px,
    desktop : 1200px,
    large: 1920px);





@mixin respondsa($respond) {

    @each $viewpoint,
    $num in $breakpoint {
        @if $respond==$viewpoint {
            @if $viewpoint==small {
                @media all and (max-width: $num) {
                    @content;
                }
            }

            @else {
                @media all and (min-width: $num) {
                    @content;
                }
            }
        }
    }
}


@include respondsa(desktop) {
    .vox {
        width: 100px;
    }
}



// a:hover {


//     color: #000;

// }


a {
    &:hover {
        color: #000;
    }
    &:after {
     content: ''
    }
    &.link {
       font-size: 20px;    
    }
}